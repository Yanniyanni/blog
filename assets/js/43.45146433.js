(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{444:function(t,e,_){"use strict";_.r(e);var v=_(48),a=Object(v.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"计算机网络体系结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络体系结构"}},[t._v("#")]),t._v(" 计算机网络体系结构")]),t._v(" "),_("a",{attrs:{"data-fancybox":"",href:t.$withBase("/internet-protocol.png")}},[_("img",{attrs:{src:t.$withBase("/internet-protocol.png")}})]),t._v(" "),_("p",[t._v("注意点：")]),t._v(" "),_("ul",[_("li",[t._v("http、https 属于应用层")]),t._v(" "),_("li",[t._v("TCP/IP协议是泛指，不是特指")]),t._v(" "),_("li",[t._v("TCP 和 IP 是不同层")])]),t._v(" "),_("h2",{attrs:{id:"tcp-ip"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip"}},[t._v("#")]),t._v(" TCP/IP")]),t._v(" "),_("p",[t._v("TCP/IP（Transmission Control Protocol/Internet Protocol，传输控制协议/网际协议）是指能够在多个不同网络间实现信息传输的协议簇。TCP/IP协议不仅仅指的是TCP 和IP两个协议，而是"),_("strong",[t._v("指一个由FTP、SMTP、TCP、UDP、IP等协议构成的协议族")]),t._v("， 只是因为在TCP/IP协议中TCP协议和IP协议最具代表性，所以被称为TCP/IP协议。")]),t._v(" "),_("h3",{attrs:{id:"tcp-ip网络模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip网络模型"}},[t._v("#")]),t._v(" TCP/IP网络模型")]),t._v(" "),_("p",[t._v("请看上图")]),t._v(" "),_("h2",{attrs:{id:"tcp和udp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp和udp"}},[t._v("#")]),t._v(" TCP和UDP")]),t._v(" "),_("p",[t._v("TCP 和 UDP 是 TCP/IP 中有两个具有代表性的传输层协议。")]),t._v(" "),_("h3",{attrs:{id:"udp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#udp"}},[t._v("#")]),t._v(" UDP")]),t._v(" "),_("p",[t._v("UDP：User Datagram Protocol，用户数据报协议。"),_("strong",[t._v("是一种无连接的传输层协议，提供面向事务的简单不可靠信息传送服务")]),t._v("。")]),t._v(" "),_("p",[t._v("UDP 有以下几个特点：")]),t._v(" "),_("p",[_("strong",[t._v("1. 面向无连接")])]),t._v(" "),_("p",[t._v("UDP 是不需要和 TCP一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。并且也只是数据报文的搬运工，不会对数据报文进行任何拆分和拼接操作。")]),t._v(" "),_("p",[t._v("具体来说就是：")]),t._v(" "),_("ul",[_("li",[t._v("在发送端，应用层将数据传递给传输层的 UDP 协议，UDP 只会给数据增加一个 UDP 头标识下是 UDP 协议，然后就传递给网络层了")]),t._v(" "),_("li",[t._v("在接收端，网络层将数据传递给传输层，UDP 只去除 IP 报文头就传递给应用层，不会任何拼接操作")])]),t._v(" "),_("p",[_("strong",[t._v("2. 有单播，多播，广播的功能")])]),t._v(" "),_("p",[t._v("UDP 不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说 UDP 提供了单播，多播，广播的功能。")]),t._v(" "),_("p",[_("strong",[t._v("3. UDP是面向报文的")])]),t._v(" "),_("p",[t._v("发送方的UDP对应用程序交下来的报文，在添加首部后就向下交付IP层。UDP对应用层交下来的报文，既不合并，也不拆分，而是保留这些报文的边界。因此，应用程序必须选择合适大小的报文")]),t._v(" "),_("p",[_("strong",[t._v("4. 不可靠性")])]),t._v(" "),_("p",[t._v("UDP 通信都不需要建立连接，想发就发，发送数据也不会关心对方是否已经正确接收到数据了。并且收到什么数据就传递什么数据，也不会备份数据。")]),t._v(" "),_("p",[t._v("再者网络环境时好时坏，但是 UDP 因为没有拥塞控制，一直会以恒定的速度发送数据。即使网络条件不好，也不会对发送速率进行调整。这样实现的弊端就是在网络条件不好的情况下可能会导致丢包，但是优点也很明显，在某些实时性要求高的场景（比如电话会议）就需要使用 UDP 而不是 TCP。")]),t._v(" "),_("p",[_("strong",[t._v("5. 头部开销小，传输数据报文效率高")])]),t._v(" "),_("a",{attrs:{"data-fancybox":"",href:t.$withBase("/internet-udp-header.png")}},[_("img",{attrs:{src:t.$withBase("/internet-udp-header.png")}})]),t._v(" "),_("p",[t._v("UDP 头部包含了以下几个数据：")]),t._v(" "),_("ul",[_("li",[t._v("两个十六位的端口号，分别为源端口（可选字段）和目标端口")]),t._v(" "),_("li",[t._v("整个数据报文的长度")]),t._v(" "),_("li",[t._v("整个数据报文的检验和（IPv4 可选 字段），该字段用于发现头部信息和数据中的错误")])]),t._v(" "),_("p",[t._v("因此 UDP 的头部开销小，只有八字节，相比 TCP 的至少二十字节要少得多，在传输数据报文时是很高效的")]),t._v(" "),_("h3",{attrs:{id:"tcp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[t._v("#")]),t._v(" TCP")]),t._v(" "),_("p",[t._v("TCP：Transmission Control Protocol，传输控制协议。"),_("strong",[t._v("是一种面向连接的、可靠的、基于字节流的传输层通信协议。")])]),t._v(" "),_("h4",{attrs:{id:"tcp连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp连接"}},[t._v("#")]),t._v(" TCP连接")]),t._v(" "),_("p",[t._v("说明：以下描述皆以 A 代表客户端，B 代表服务器。")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("建立连接：三次握手")])])]),t._v(" "),_("p",[t._v("第一次握手：A 向 B 发送连接请求报文段。该报文段中包含自身的数据通讯初始序号。请求发送后，A 便进入 SYN-SENT 状态。")]),t._v(" "),_("p",[t._v("第二次握手：B 收到连接请求报文段后，如果同意连接，则会发送一个应答，该应答中也会包含自身的数据通讯初始序号，发送完成后便进入 SYN-RECEIVED 状态。")]),t._v(" "),_("p",[t._v("第三次握手：当 A 收到连接同意的应答后，还要向 B 发送一个确认报文。A 发完这个报文段后便进入 ESTABLISHED 状态，B 收到这个应答后也进入 ESTABLISHED 状态，此时连接建立成功。")]),t._v(" "),_("p",[_("strong",[t._v("原因")]),t._v("：为了防止出现失效的连接请求报文段被服务端接收的情况，从而产生错误。")]),t._v(" "),_("a",{attrs:{"data-fancybox":"",href:t.$withBase("/internet-tcp-connect.jpg")}},[_("img",{attrs:{src:t.$withBase("/internet-tcp-connect.jpg")}})]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("断开连接：四次挥手")])])]),t._v(" "),_("blockquote",[_("p",[t._v("TCP 是全双工的，在断开连接时两端都需要发送 FIN 和 ACK。")])]),t._v(" "),_("p",[t._v("第一次挥手：A 向 B 发送释放请求。")]),t._v(" "),_("p",[t._v("第二次挥手：B 收到释放请求后，会发送 ACK 包告知 A 可以释放 TCP 链接，并进入 CLOSE_WAIT 状态。此时表明 A 到 B 的连接已经释放，B 不再接收 A 发的数据了。但是因为 TCP 连接是双向的，所以B 仍旧可以发送数据给 A 。")]),t._v(" "),_("p",[t._v("第三次挥手：B 如果此时还有没发完的数据会继续发送，完毕后会向 A 发送连接释放请求，然后 B 便进入 LAST-ACK 状态。")]),t._v(" "),_("p",[t._v("第四次挥手：A 收到释放请求后，向 B 发送确认应答，此时 A 进入 TIME-WAIT 状态。该状态会持续 2MSL（最大段生存期，指报文段在网络中生存的时间，超时会被抛弃） 时间，若该时间段内没有 B 的重发请求的话，就进入 CLOSED 状态。当 B 收到确认应答后，也便进入 CLOSED 状态。")]),t._v(" "),_("p",[_("strong",[t._v("原因")]),t._v("：一是为了让 B 能够按照正常步骤进入 CLOSED 状态，二是为了防止已经失效的请求连接报文出现在下次连接中。")]),t._v(" "),_("a",{attrs:{"data-fancybox":"",href:t.$withBase("/internet-tcp-closed.jpg")}},[_("img",{attrs:{src:t.$withBase("/internet-tcp-closed.jpg")}})]),t._v(" "),_("h4",{attrs:{id:"tcp特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp特点"}},[t._v("#")]),t._v(" TCP特点")]),t._v(" "),_("p",[_("strong",[t._v("1. 面向连接")])]),t._v(" "),_("p",[t._v("面向连接，是指发送数据之前必须在两端建立连接。建立连接的方法是“三次握手”，这样能建立可靠的连接。建立连接，是为数据的可靠传输打下了基础。")]),t._v(" "),_("p",[_("strong",[t._v("2. 仅支持单播传输")])]),t._v(" "),_("p",[t._v("每条TCP传输连接只能有两个端点，只能进行点对点的数据传输，不支持多播和广播传输方式。")]),t._v(" "),_("p",[_("strong",[t._v("3. 面向字节流")])]),t._v(" "),_("p",[t._v("TCP不像UDP一样那样一个个报文独立地传输，而是在不保留报文边界的情况下以字节流方式进行传输。")]),t._v(" "),_("p",[_("strong",[t._v("4. 可靠传输")])]),t._v(" "),_("p",[t._v("对于可靠传输，判断丢包，误码靠的是TCP的段编号以及确认号。TCP为了保证报文传输的可靠，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。然后接收端实体对已成功收到的字节发回一个相应的确认(ACK)；如果发送端实体在合理的往返时延(RTT)内未收到确认，那么对应的数据（假设丢失了）将会被重传。")]),t._v(" "),_("p",[_("strong",[t._v("5. 提供拥塞控制")])]),t._v(" "),_("p",[t._v("当网络出现拥塞的时候，TCP能够减小向网络注入数据的速率和数量，缓解拥塞")]),t._v(" "),_("p",[_("strong",[t._v("6. TCP提供全双工通信")])]),t._v(" "),_("p",[t._v("TCP允许通信双方的应用程序在任何时候都能发送数据，因为TCP连接的两端都设有缓存，用来临时存放双向通信的数据。当然，TCP可以立即发送一个数据段，也可以缓存一段时间以便一次发送更多的数据段（最大的数据段大小取决于MSS）")]),t._v(" "),_("h3",{attrs:{id:"tcp和udp对比"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp和udp对比"}},[t._v("#")]),t._v(" TCP和UDP对比")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"left"}}),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[t._v("UDP")]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[t._v("TCP")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("是否连接")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("无连接")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("面向连接")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("是否可靠")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("不可靠传输，不使用流量控制和拥塞控制")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("可靠传输，使用流量控制和拥塞控制")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("连接对象个数")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("支持一对一，一对多，多对一和多对多交互通信")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("只能是一对一通信")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("传输方式")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("面向报文")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("面向字节流")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("首部开销")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("首部开销小，仅8字节")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("首部最小20字节，最大60字节")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("适用场景")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("适用于实时应用（IP电话、视频会议、直播等）")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("适用于要求可靠传输的应用，例如文件传输")])])])]),t._v(" "),_("h3",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),_("ul",[_("li",[t._v("TCP向上层提供面向连接的可靠服务 ，UDP向上层提供无连接不可靠服务。")]),t._v(" "),_("li",[t._v("虽然 UDP 并没有 TCP 传输来的准确，但是也能在很多实时性要求高的地方有所作为")]),t._v(" "),_("li",[t._v("对数据准确性要求高，速度可以相对较慢的，可以选用TCP")])]),t._v(" "),_("h2",{attrs:{id:"http-发展史"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-发展史"}},[t._v("#")]),t._v(" HTTP 发展史")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"left"}},[t._v("版本")]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[t._v("发布时间")]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[t._v("内容")]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("HTTP/0.9")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("1991年")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("仅支持get方法、仅限文字等，有严重缺陷，很快被HTTP/1.0替代")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("HTTP/1.0")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("1996年5月")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("它集合一系列的最佳实践，但也有缺陷。")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("第一个得到广泛应用的版本")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("HTTP/1.1")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("1997年1月")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("校正 1.0 版本的缺陷，进一步完善了HTTP协议。")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("仍是当前最流行的版本")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("SPDY")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("2009年")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("2009年谷歌发布SPDY协议，主要解决HTTP/1.1效率不高的问题")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("HTTP/2")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("2015年")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("借鉴SPDY，重点关注性能的大幅优化以及更强大的服务逻辑远程执行框架。")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),_("p",[t._v("Tips: HTTP/2 不叫 HTTP/2.0，是因为标准委员会不打算再发布子版本了，下一个新版本将是 HTTP/3。\nHTTP/2 只在 HTTPS 环境下才有效，升级到 HTTP/2 必须先启用 HTTPS。")]),t._v(" "),_("p",[_("strong",[t._v("区别")])]),t._v(" "),_("p",[t._v("简书 - "),_("a",{attrs:{href:"https://www.jianshu.com/p/52d86558ca57",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何优雅的谈论HTTP／1.0／1.1／2.0"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("strong",[t._v("规范文档")])]),t._v(" "),_("ul",[_("li",[t._v("IEIF - "),_("a",{attrs:{href:"https://tools.ietf.org/html/rfc1945",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/1.0"),_("OutboundLink")],1)]),t._v(" "),_("li",[t._v("IEIF - "),_("a",{attrs:{href:"https://tools.ietf.org/html/rfc2616",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/1.1"),_("OutboundLink")],1)]),t._v(" "),_("li",[t._v("IEIF - "),_("a",{attrs:{href:"https://tools.ietf.org/html/rfc7540",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/2"),_("OutboundLink")],1)])]),t._v(" "),_("p",[_("strong",[t._v("其他文档")])]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://www.w3.org/Protocols/History.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("万维网和http简史"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.w3.org/Protocols/",target:"_blank",rel:"noopener noreferrer"}},[t._v("各种协议"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.w3school.com.cn/media/media_mimeref.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("常见MIME类型"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);