(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{582:function(e,t,r){"use strict";r.r(t);var v=r(48),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("Reflect 是 ES6 为了操作对象而提供的新 API，它是 Proxy 的最佳搭档，Api都是一一对应的。")]),e._v(" "),r("h2",{attrs:{id:"作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[e._v("#")]),e._v(" 作用")]),e._v(" "),r("p",[e._v("Reflect 的作用：")]),e._v(" "),r("ul",[r("li",[e._v("和 Proxy 能力一一对应")]),e._v(" "),r("li",[e._v("规范化、标准化、函数化")]),e._v(" "),r("li",[e._v("替代 Object 上的工具函数")])]),e._v(" "),r("h2",{attrs:{id:"静态方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[e._v("#")]),e._v(" 静态方法")]),e._v(" "),r("p",[e._v("Reflect对象一共有 13 个静态方法。这13个方法大部分跟 Object 的"),r("RouterLink",{attrs:{to:"/frontend/javascript/object.html#对象方法"}},[e._v("方法")]),e._v("相同，并且这些方法跟 proxy 的"),r("RouterLink",{attrs:{to:"/frontend/javascript/proxy.html#拦截方法"}},[e._v("拦截方法")]),e._v("是一一对应的，并且作用也是相同的。")],1),e._v(" "),r("ul",[r("li",[r("code",[e._v("Reflect.get(target, name, receiver)")]),e._v("：获取属性")]),e._v(" "),r("li",[r("code",[e._v("Reflect.set(target, name, value, receiver)")]),e._v("：设置属性，成功则返回true")]),e._v(" "),r("li",[r("code",[e._v("Reflect.has(target, name)")]),e._v("：是否存在属性，相当于 in 操作")]),e._v(" "),r("li",[r("code",[e._v("Reflect.defineProperty(target, name, desc)")]),e._v("：添加属性并指定配置")]),e._v(" "),r("li",[r("code",[e._v("Reflect.deleteProperty(target, name)")]),e._v("：删除属性，相当于 delete 操作")]),e._v(" "),r("li",[r("code",[e._v("Reflect.ownKeys(target)")]),e._v("：返回一个包含所有自身属性（不包含继承属性）的数组")]),e._v(" "),r("li",[r("code",[e._v("Reflect.getOwnPropertyDescriptor(target, name)")]),e._v("：查看属性描述对象")]),e._v(" "),r("li",[r("code",[e._v("Reflect.getPrototypeOf(target)")]),e._v(": 返回指定对象的原型对象")]),e._v(" "),r("li",[r("code",[e._v("Reflect.setPrototypeOf(target, prototype)")]),e._v("：设置对象的原型")]),e._v(" "),r("li",[r("code",[e._v("Reflect.isExtensible(target)")]),e._v("：检测是否可拓展")]),e._v(" "),r("li",[r("code",[e._v("Reflect.preventExtensions(target)")]),e._v("：不允许对象本身拓展")]),e._v(" "),r("li",[r("code",[e._v("Reflect.apply(target, thisArgument, argumentList)")]),e._v("：对函数进行调用，类似apply()")]),e._v(" "),r("li",[r("code",[e._v("Reflect.construct(target, argumentList)")]),e._v("：对构造函数进行 new 操作")])])])}),[],!1,null,null,null);t.default=_.exports}}]);