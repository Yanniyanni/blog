(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{604:function(t,a,_){"use strict";_.r(a);var s=_(48),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h3",{attrs:{id:"_1-介绍下浏览器跨域"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍下浏览器跨域"}},[t._v("#")]),t._v(" 1. 介绍下浏览器跨域")]),t._v(" "),_("p",[t._v("浏览器的同源安全策略。")]),t._v(" "),_("p",[_("code",[t._v("协议://地址:端口")]),t._v(" 三者都相同，才算同源，否则报跨域错误。")]),t._v(" "),_("p",[t._v("如果非同源，以下的行为受到限制：")]),t._v(" "),_("ul",[_("li",[t._v("Cookie、LocalStorage 和 IndexDB 无法读取")]),t._v(" "),_("li",[t._v("DOM 无法获得（iframe无法通信）")]),t._v(" "),_("li",[t._v("AJAX 请求不能发送")])]),t._v(" "),_("p",[_("RouterLink",{attrs:{to:"/advanced/browser/same-origin.html"}},[t._v("参考")])],1),t._v(" "),_("h3",{attrs:{id:"_2-怎么去解决跨域问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-怎么去解决跨域问题"}},[t._v("#")]),t._v(" 2. 怎么去解决跨域问题")]),t._v(" "),_("ul",[_("li",[t._v("CORS")]),t._v(" "),_("li",[t._v("代理（本地代理/nginx代理）")]),t._v(" "),_("li",[t._v("jsonp")])]),t._v(" "),_("p",[_("RouterLink",{attrs:{to:"/advanced/browser/same-origin.html#跨域请求解决方案"}},[t._v("参考")])],1),t._v(" "),_("h3",{attrs:{id:"_3-jsonp方案需要服务端怎么配合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-jsonp方案需要服务端怎么配合"}},[t._v("#")]),t._v(" 3. jsonp方案需要服务端怎么配合")]),t._v(" "),_("h3",{attrs:{id:"_4-ajax发生跨域要设置什么-前端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-ajax发生跨域要设置什么-前端"}},[t._v("#")]),t._v(" 4. Ajax发生跨域要设置什么（前端）")]),t._v(" "),_("ul",[_("li",[t._v("使用nginx代理")]),t._v(" "),_("li",[t._v("使用CORS，配置前端域名允许访问")])]),t._v(" "),_("h3",{attrs:{id:"_5-加上cors之后从发起到请求正式成功的过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-加上cors之后从发起到请求正式成功的过程"}},[t._v("#")]),t._v(" 5. 加上CORS之后从发起到请求正式成功的过程")]),t._v(" "),_("ul",[_("li",[t._v("简单请求")]),t._v(" "),_("li",[t._v("非简单请求")])]),t._v(" "),_("p",[t._v("通过HTTP首部字段来控制。"),_("RouterLink",{attrs:{to:"/advanced/browser/cors.html#cors流程图"}},[t._v("CORS流程图")]),t._v("。")],1),t._v(" "),_("h3",{attrs:{id:"_6-xsrf跨域攻击的安全性问题怎么防范"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-xsrf跨域攻击的安全性问题怎么防范"}},[t._v("#")]),t._v(" 6. xsrf跨域攻击的安全性问题怎么防范")]),t._v(" "),_("h3",{attrs:{id:"_7-网站seo怎么处理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-网站seo怎么处理"}},[t._v("#")]),t._v(" 7. 网站SEO怎么处理")]),t._v(" "),_("ul",[_("li",[t._v("合理的title、description、keywords")]),t._v(" "),_("li",[t._v("语义化的HTML代码")]),t._v(" "),_("li",[t._v("非装饰性图片必须加alt")]),t._v(" "),_("li",[t._v("少用iframe")]),t._v(" "),_("li",[t._v("提高网站访问速度")]),t._v(" "),_("li",[t._v("把SPA项目调整为SSR服务端渲染")])]),t._v(" "),_("h3",{attrs:{id:"_8-介绍下http状态码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-介绍下http状态码"}},[t._v("#")]),t._v(" 8. 介绍下HTTP状态码")]),t._v(" "),_("p",[_("RouterLink",{attrs:{to:"/advanced/internet/http.html#响应状态码"}},[t._v("参考-HTTP状态码")])],1),t._v(" "),_("h3",{attrs:{id:"_9-403、301、302是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-403、301、302是什么"}},[t._v("#")]),t._v(" 9. 403、301、302是什么？")]),t._v(" "),_("ul",[_("li",[t._v("403：Invalid CORS。CORS 验证失败，包括origin、header、methods的不匹配都有可能抛出403。")]),t._v(" "),_("li",[t._v("301：永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替")]),t._v(" "),_("li",[t._v("302：临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI")])]),t._v(" "),_("h3",{attrs:{id:"_10-缓存相关的http请求头"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-缓存相关的http请求头"}},[t._v("#")]),t._v(" 10. 缓存相关的HTTP请求头")]),t._v(" "),_("p",[t._v("请求头：")]),t._v(" "),_("ul",[_("li",[t._v("Cache-Control")]),t._v(" "),_("li",[t._v("expires(兼容旧版)")]),t._v(" "),_("li",[t._v("IF-Modified-Since:【date】 + Last-Modified")]),t._v(" "),_("li",[t._v("If-None-Match:【ETag】 + ETag")])]),t._v(" "),_("p",[t._v("缓存数据返回状态可能是：")]),t._v(" "),_("ul",[_("li",[t._v("304 Not Modified：服务器判断可以读取缓存，客户端直接读缓存")]),t._v(" "),_("li",[t._v("200 OK (from memory cache)：从内存缓存中读取")]),t._v(" "),_("li",[t._v("200 OK (from disk cache) ：从磁盘中读取")])]),t._v(" "),_("p",[_("RouterLink",{attrs:{to:"/advanced/internet/http-cache.html"}},[t._v("参考- HTTP缓存")])],1),t._v(" "),_("h3",{attrs:{id:"_11-介绍https"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-介绍https"}},[t._v("#")]),t._v(" 11. 介绍HTTPS")]),t._v(" "),_("p",[t._v("HTTPS（安全的HTTP） 是 HTTP 协议的加密版本。它通常使用 SSL 或者 TLS 来加密客户端和服务器之间所有的通信。")]),t._v(" "),_("h3",{attrs:{id:"_12-https怎么建立安全通道"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-https怎么建立安全通道"}},[t._v("#")]),t._v(" 12. HTTPS怎么建立安全通道")]),t._v(" "),_("h3",{attrs:{id:"_13-网络的五层模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-网络的五层模型"}},[t._v("#")]),t._v(" 13. 网络的五层模型")]),t._v(" "),_("p",[t._v("物理层、数据链路层、网络层、运输层、应用层。")]),t._v(" "),_("p",[_("RouterLink",{attrs:{to:"/advanced/internet/#计算机网络体系结构"}},[t._v("参考")])],1),t._v(" "),_("h3",{attrs:{id:"_14-http和https的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14-http和https的区别"}},[t._v("#")]),t._v(" 14. HTTP和HTTPS的区别")]),t._v(" "),_("h3",{attrs:{id:"_15-https的加密过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-https的加密过程"}},[t._v("#")]),t._v(" 15. HTTPS的加密过程")]),t._v(" "),_("h3",{attrs:{id:"_16-介绍ssl和tls"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-介绍ssl和tls"}},[t._v("#")]),t._v(" 16. 介绍SSL和TLS")]),t._v(" "),_("p",[t._v("SSL：Secure Sockets Layer 安全套接字协议\nTSL: Transport Layer Security 传输层安全")]),t._v(" "),_("p",[_("RouterLink",{attrs:{to:"/advanced/internet/https.html#ssl和tls"}},[t._v("参考")])],1),t._v(" "),_("h3",{attrs:{id:"_17-介绍dns解析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_17-介绍dns解析"}},[t._v("#")]),t._v(" 17. 介绍DNS解析")])])}),[],!1,null,null,null);a.default=r.exports}}]);